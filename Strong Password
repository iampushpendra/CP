
#include <bits/stdc++.h>

using namespace std;

// Complete the minimumNumber function below.
int minimumNumber(int n, string p) {
    // Return the minimum number of characters to make the password strong
    int c1=0,c2=0,c3=0,c4=0,sum=0;
    for(int i=0;i<=n-1;i++){
        if(c1==1&&c2==1&&c3==1&&c4==1&&n>=6){
            sum=1;
            break;
        }
        if(p[i]>=48&&p[i]<=57)
            c1=1;
        else if(p[i]>=65&&p[i]<=90)
            c2=1;
        else if(p[i]>=97&&p[i]<=122)
            c3=1;
        else if(p[i]=='+'||p[i]=='-'||p[i]==')'||p[i]=='('||p[i]=='*'||p[i]=='&'||p[i]=='^'||p[i]=='%'||p[i]=='$'||p[i]=='#'||p[i]=='@'||p[i]=='!')
            c4=1;
    }
    if(sum==1)
        return 0;
    sum=c1+c2+c3+c4;
    if(n>=6)
        return 4-sum;
    else if ((6-n)>=(4-sum))
        return 6-n;
    else 
        return 4-sum;
}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    int n;
    cin >> n;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    string password;
    getline(cin, password);

    int answer = minimumNumber(n, password);

    fout << answer << "\n";

    fout.close();

    return 0;
}
